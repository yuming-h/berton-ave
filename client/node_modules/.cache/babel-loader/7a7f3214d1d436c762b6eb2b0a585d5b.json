{"ast":null,"code":"import _classCallCheck from \"/Users/yuming/ws-local/projects/berton-ave/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yuming/ws-local/projects/berton-ave/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yuming/ws-local/projects/berton-ave/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yuming/ws-local/projects/berton-ave/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yuming/ws-local/projects/berton-ave/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { Fragment, Component } from 'react';\nimport { Header, Icon, Grid, Card } from 'semantic-ui-react';\nimport Clock from 'react-live-clock';\nvar PRIMARY_COLOR = '#4E80A2';\nvar SECOND_COLOR = '#4E80A2';\nvar TEXT_COLOR = '#ffffff';\nvar pageStyle = {\n  marginLeft: '45px',\n  marginTop: '45px',\n  marginRight: '65px',\n  color: PRIMARY_COLOR\n};\nvar timeStyle = {\n  textAlign: 'right'\n};\nvar timeTextStyle = {\n  fontSize: '60px',\n  color: TEXT_COLOR\n};\nvar topHeaderStyle = {\n  fontSize: '90px',\n  color: TEXT_COLOR\n};\nvar choreHeaderStyle = {\n  fontSize: '45px',\n  color: TEXT_COLOR\n};\nvar cardStyle = {\n  backgroundColor: SECOND_COLOR,\n  color: TEXT_COLOR\n};\nvar cardHeaderStyle = {\n  fontSize: '55px'\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.rotateChores = function () {\n      var tmp = _this.state.choreArray[0];\n\n      for (var i = 1; i < _this.state.choreArray.length; i++) {\n        _this.state.choreArray[i] = [tmp, tmp = _this.state.choreArray[i]][0];\n      }\n\n      _this.state.choreArray[0] = tmp;\n    };\n\n    _this.state = {\n      choreArray: ['Garbage/Compost, Recycling', 'Floors, Counters', 'Exhaust Fan/Stove/Microwave', 'Dishwasher, Sink Clean']\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        _this2.rotateChores();\n\n        _this2.setState({\n          time: Date.now()\n        }), 1000;\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/yuming/ws-local/projects/berton-ave/src/App.js"],"names":["React","Fragment","Component","Header","Icon","Grid","Card","Clock","PRIMARY_COLOR","SECOND_COLOR","TEXT_COLOR","pageStyle","marginLeft","marginTop","marginRight","color","timeStyle","textAlign","timeTextStyle","fontSize","topHeaderStyle","choreHeaderStyle","cardStyle","backgroundColor","cardHeaderStyle","App","props","rotateChores","tmp","state","choreArray","i","length","interval","setInterval","setState","time","Date","now","clearInterval"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,IAA7B,QAAyC,mBAAzC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,IAAMC,aAAa,GAAG,SAAtB;AACA,IAAMC,YAAY,GAAG,SAArB;AACA,IAAMC,UAAU,GAAG,SAAnB;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE,MADI;AAEhBC,EAAAA,SAAS,EAAE,MAFK;AAGhBC,EAAAA,WAAW,EAAE,MAHG;AAIhBC,EAAAA,KAAK,EAAEP;AAJS,CAAlB;AAMA,IAAMQ,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAE;AADK,CAAlB;AAGA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,MADU;AAEpBJ,EAAAA,KAAK,EAAEL;AAFa,CAAtB;AAIA,IAAMU,cAAc,GAAG;AACrBD,EAAAA,QAAQ,EAAE,MADW;AAErBJ,EAAAA,KAAK,EAAEL;AAFc,CAAvB;AAIA,IAAMW,gBAAgB,GAAG;AACvBF,EAAAA,QAAQ,EAAE,MADa;AAEvBJ,EAAAA,KAAK,EAAEL;AAFgB,CAAzB;AAIA,IAAMY,SAAS,GAAG;AAChBC,EAAAA,eAAe,EAAEd,YADD;AAEhBM,EAAAA,KAAK,EAAEL;AAFS,CAAlB;AAIA,IAAMc,eAAe,GAAG;AACtBL,EAAAA,QAAQ,EAAE;AADY,CAAxB;;IAKqBM,G;;;;;AAEnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAUnBC,YAVmB,GAUJ,YAAM;AACnB,UAAIC,GAAG,GAAG,MAAKC,KAAL,CAAWC,UAAX,CAAsB,CAAtB,CAAV;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAKF,KAAL,CAAWC,UAAX,CAAsBE,MAA1C,EAAkDD,CAAC,EAAnD,EAAuD;AACnD,cAAKF,KAAL,CAAWC,UAAX,CAAsBC,CAAtB,IAA2B,CAACH,GAAD,EAAMA,GAAG,GAAC,MAAKC,KAAL,CAAWC,UAAX,CAAsBC,CAAtB,CAAV,EAAoC,CAApC,CAA3B;AACH;;AACD,YAAKF,KAAL,CAAWC,UAAX,CAAsB,CAAtB,IAA2BF,GAA3B;AACD,KAhBkB;;AAEjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,CACV,4BADU,EACoB,kBADpB,EAEV,6BAFU,EAEqB,wBAFrB;AADD,KAAb;AAFiB;AAQlB;;;;wCAUmB;AAAA;;AAClB,WAAKG,QAAL,GAAgBC,WAAW,CAAC,YAAM;AAChC,QAAA,MAAI,CAACP,YAAL;;AACA,QAAA,MAAI,CAACQ,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL;AAAR,SAAd,GAAqC,IAArC;AACD,OAH0B,CAA3B;AAID;;;2CACsB;AACrBC,MAAAA,aAAa,CAAC,KAAKN,QAAN,CAAb;AACD;;;;EA5B8B/B,S;;SAAZuB,G","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport { Header, Icon, Grid, Card } from 'semantic-ui-react';\nimport Clock from 'react-live-clock';\n\nconst PRIMARY_COLOR = '#4E80A2';\nconst SECOND_COLOR = '#4E80A2';\nconst TEXT_COLOR = '#ffffff';\n\nconst pageStyle = {\n  marginLeft: '45px',\n  marginTop: '45px',\n  marginRight: '65px',\n  color: PRIMARY_COLOR\n}\nconst timeStyle = {\n  textAlign: 'right'\n}\nconst timeTextStyle = {\n  fontSize: '60px',\n  color: TEXT_COLOR\n}\nconst topHeaderStyle = {\n  fontSize: '90px',\n  color: TEXT_COLOR\n}\nconst choreHeaderStyle = {\n  fontSize: '45px',\n  color: TEXT_COLOR\n}\nconst cardStyle = {\n  backgroundColor: SECOND_COLOR,\n  color: TEXT_COLOR\n}\nconst cardHeaderStyle = {\n  fontSize: '55px'\n}\n\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      choreArray: [\n        'Garbage/Compost, Recycling', 'Floors, Counters', \n        'Exhaust Fan/Stove/Microwave', 'Dishwasher, Sink Clean'\n      ]\n    }\n  }\n\n  rotateChores = () => {\n    var tmp = this.state.choreArray[0];\n    for (var i = 1; i < this.state.choreArray.length; i++) {\n        this.state.choreArray[i] = [tmp, tmp=this.state.choreArray[i]][0]\n    }\n    this.state.choreArray[0] = tmp;\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.rotateChores();\n      this.setState({ time: Date.now() }), 1000;\n    });\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  rd\n\n}\n\n"]},"metadata":{},"sourceType":"module"}