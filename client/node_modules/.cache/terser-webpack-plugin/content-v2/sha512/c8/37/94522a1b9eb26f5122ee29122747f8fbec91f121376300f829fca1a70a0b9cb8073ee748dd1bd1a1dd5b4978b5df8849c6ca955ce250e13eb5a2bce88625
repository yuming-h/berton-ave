{"map":"{\"version\":3,\"sources\":[\"/Users/yuming/Projects/alssc.github.io/src/Menu.js\",\"/Users/yuming/Projects/alssc.github.io/src/Login.js\",\"/Users/yuming/Projects/alssc.github.io/src/App.js\",\"/Users/yuming/Projects/alssc.github.io/src/serviceWorker.js\",\"/Users/yuming/Projects/alssc.github.io/src/index.js\"],\"names\":[\"src_Menu\",\"react_default\",\"a\",\"createElement\",\"Menu\",\"Container\",\"Item\",\"as\",\"header\",\"Image\",\"size\",\"src\",\"position\",\"name\",\"Login\",\"Grid\",\"centered\",\"columns\",\"Column\",\"Header\",\"textAlign\",\"Segment\",\"Form\",\"Input\",\"fluid\",\"icon\",\"iconPosition\",\"placeholder\",\"type\",\"Button\",\"color\",\"Message\",\"href\",\"App\",\"react\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"6OAGeA,EAAA,WAAA,OACbC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACC,EAAA,EAAKE,KAAN,CAAWC,GAAG,IAAIC,QAAM,GACtBP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEC,KAAK,QACLC,IAAI,mDAIRV,EAAAC,EAAAC,cAACC,EAAA,EAAKA,KAAN,CAAWQ,SAAS,SAClBX,EAAAC,EAAAC,cAACC,EAAA,EAAKE,KAAN,CAAWC,GAAG,IAAIM,KAAK,SAAvB,SAIAZ,EAAAC,EAAAC,cAACC,EAAA,EAAKE,KAAN,CAAWC,GAAG,IAAIM,KAAK,YAAvB,sECROC,EAAA,WAAA,OACbb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,UAAQ,EAACC,QAAS,GACtBhB,EAAAC,EAAAC,cAACY,EAAA,EAAKG,OAAN,KACEjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQZ,GAAG,KAAKa,UAAU,UAA1B,SAGAnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KACEpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMZ,KAAK,SACTT,EAAAC,EAAAC,cAACmB,EAAA,EAAKC,MAAN,CACEC,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,kBAEd1B,EAAAC,EAAAC,cAACmB,EAAA,EAAKC,MAAN,CACEC,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,WACZC,KAAK,aAGP3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQC,MAAM,OAAON,OAAK,EAACd,KAAK,SAAhC,WAKJT,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,KAAA,uBACsB9B,EAAAC,EAAAC,cAAA,IAAA,CAAG6B,KAAK,KAAR,eCvBbC,EATH,WAAA,OACVhC,EAAAC,EAAAC,cAAC+B,EAAA,SAAD,KACEjC,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACW,EAAD,SCEcqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,EAAAA,EAASC,OAAOxC,EAAAC,EAAAC,cAACuC,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\nimport { Container, Image, Menu } from 'semantic-ui-react';\\n\\nexport default () => (\\n  <Menu>\\n    <Container>\\n      <Menu.Item as=\\\"a\\\" header>\\n        <Image\\n          size=\\\"small\\\"\\n          src=\\\"https://www.robinwieruch.de/img/page/logo.svg\\\"\\n        />\\n      </Menu.Item>\\n\\n      <Menu.Menu position=\\\"right\\\">\\n        <Menu.Item as=\\\"a\\\" name=\\\"login\\\">\\n          Login\\n        </Menu.Item>\\n\\n        <Menu.Item as=\\\"a\\\" name=\\\"register\\\">\\n          Register\\n        </Menu.Item>\\n      </Menu.Menu>\\n    </Container>\\n  </Menu>\\n);\\n\",\"import React from 'react';\\nimport {\\n  Button,\\n  Form,\\n  Grid,\\n  Header,\\n  Message,\\n  Segment,\\n} from 'semantic-ui-react';\\n\\nexport default () => (\\n  <Grid centered columns={2}>\\n    <Grid.Column>\\n      <Header as=\\\"h2\\\" textAlign=\\\"center\\\">\\n        Login\\n      </Header>\\n      <Segment>\\n        <Form size=\\\"large\\\">\\n          <Form.Input\\n            fluid\\n            icon=\\\"user\\\"\\n            iconPosition=\\\"left\\\"\\n            placeholder=\\\"Email address\\\"\\n          />\\n          <Form.Input\\n            fluid\\n            icon=\\\"lock\\\"\\n            iconPosition=\\\"left\\\"\\n            placeholder=\\\"Password\\\"\\n            type=\\\"password\\\"\\n          />\\n\\n          <Button color=\\\"blue\\\" fluid size=\\\"large\\\">\\n            Login\\n          </Button>\\n        </Form>\\n      </Segment>\\n      <Message>\\n        Not registered yet? <a href=\\\"#\\\">Sign Up</a>\\n      </Message>\\n    </Grid.Column>\\n  </Grid>\\n);\\n\",\"import React, { Fragment } from 'react';\\nimport { Container } from 'semantic-ui-react';\\n\\nimport Menu from './Menu';\\nimport Login from './Login';\\n\\nconst App = () => (\\n  <Fragment>\\n    <Menu />\\n    <Container>\\n      <Login />\\n    </Container>\\n  </Fragment>\\n);\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport 'semantic-ui-css/semantic.min.css';\\n\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{165:function(e,a,n){e.exports=n(308)},173:function(e,a,n){},308:function(e,a,n){\"use strict\";n.r(a);var t=n(1),l=n.n(t),r=n(41),o=n.n(r),c=(n(170),n(173),n(315)),i=n(319),m=n(307),s=function(){return l.a.createElement(i.a,null,l.a.createElement(c.a,null,l.a.createElement(i.a.Item,{as:\"a\",header:!0},l.a.createElement(m.a,{size:\"small\",src:\"https://www.robinwieruch.de/img/page/logo.svg\"})),l.a.createElement(i.a.Menu,{position:\"right\"},l.a.createElement(i.a.Item,{as:\"a\",name:\"login\"},\"Login\"),l.a.createElement(i.a.Item,{as:\"a\",name:\"register\"},\"Register\"))))},u=n(320),E=n(321),d=n(322),g=n(316),w=n(318),p=n(317),h=function(){return l.a.createElement(u.a,{centered:!0,columns:2},l.a.createElement(u.a.Column,null,l.a.createElement(E.a,{as:\"h2\",textAlign:\"center\"},\"Login\"),l.a.createElement(d.a,null,l.a.createElement(g.a,{size:\"large\"},l.a.createElement(g.a.Input,{fluid:!0,icon:\"user\",iconPosition:\"left\",placeholder:\"Email address\"}),l.a.createElement(g.a.Input,{fluid:!0,icon:\"lock\",iconPosition:\"left\",placeholder:\"Password\",type:\"password\"}),l.a.createElement(w.a,{color:\"blue\",fluid:!0,size:\"large\"},\"Login\"))),l.a.createElement(p.a,null,\"Not registered yet? \",l.a.createElement(\"a\",{href:\"#\"},\"Sign Up\"))))},f=function(){return l.a.createElement(t.Fragment,null,l.a.createElement(s,null),l.a.createElement(c.a,null,l.a.createElement(h,null)))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(l.a.createElement(f,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[165,2,1]]]);","extractedComments":[]}